package {{package}};

{{#imports}}import {{import}};
{{/imports}}

{{#_api_controller_impl_}}
    {{#swagger2AnnotationLibrary}}
        import io.swagger.v3.oas.annotations.Operation;
        import io.swagger.v3.oas.annotations.Parameter;
        import io.swagger.v3.oas.annotations.media.Content;
        import io.swagger.v3.oas.annotations.media.Schema;
        import io.swagger.v3.oas.annotations.responses.ApiResponse;
        import io.swagger.v3.oas.annotations.security.SecurityRequirement;
        import io.swagger.v3.oas.annotations.tags.Tag;
    {{/swagger2AnnotationLibrary}}
    {{#swagger1AnnotationLibrary}}
        import io.swagger.annotations.*;
    {{/swagger1AnnotationLibrary}}
{{/_api_controller_impl_}}

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
{{#useResponseEntity}}
    import org.springframework.http.ResponseEntity;
    import org.springframework.stereotype.Controller;
{{/useResponseEntity}}
{{^useResponseEntity}}
    import org.springframework.web.bind.annotation.RestController;
{{/useResponseEntity}}
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
{{^isDelegate}}
    import org.springframework.web.context.request.NativeWebRequest;
{{/isDelegate}}

{{#useBeanValidation}}
    import {{javaxPackage}}.validation.constraints.*;
    import {{javaxPackage}}.validation.Valid;
{{/useBeanValidation}}

import java.util.List;
import java.util.Map;
import java.util.Optional;
import {{javaxPackage}}.annotation.Generated;

{{>generatedAnnotation}}
{{#useResponseEntity}}
    @Controller
{{/useResponseEntity}}
{{^useResponseEntity}}
    @RestController
{{/useResponseEntity}}
{{#useRequestMappingOnController}}
{{=<% %>=}}
@RequestMapping("<%>defaultBasePath%>")
<%={{ }}=%>
{{/useRequestMappingOnController}}
public class {{classname}}Controller implements {{classname}} {

    private final {{classname}}Delegate service;

    @Autowired
    public {{classname}}Controller({{classname}}Delegate service) {
        this.service = service;
    }

{{#operations}}
    {{#operation}}
        {{#isArray}}
        @Override
        public ResponseEntity<List<{{{returnType}}}>> {{operationId}}({{#allParams}}{{^isFile}}{{^isBodyParam}}{{>optionalDataType}}{{/isBodyParam}}{{#isBodyParam}}{{^reactive}}{{>optionalDataType}}{{/reactive}}{{#reactive}}{{^isArray}}Mono<{{{dataType}}}>{{/isArray}}{{#isArray}}Flux<{{{baseType}}}>{{/isArray}}{{/reactive}}{{/isBodyParam}}{{/isFile}}{{#isFile}}{{#isArray}}List<{{/isArray}}{{#reactive}}Flux<Part>{{/reactive}}{{^reactive}}MultipartFile{{/reactive}}{{#isArray}}>{{/isArray}}{{/isFile}} {{paramName}}{{^-last}},
        {{/-last}}{{/allParams}}{{#reactive}}{{#hasParams}},
        {{/hasParams}}ServerWebExchange exchange{{/reactive}}{{#vendorExtensions.x-spring-paginated}}{{#hasParams}}, {{/hasParams}}{{^hasParams}}{{#reactive}}, {{/reactive}}{{/hasParams}}final Pageable pageable{{/vendorExtensions.x-spring-paginated}}) {
            return service.{{operationId}}({{#allParams}}{{paramName}}{{^-last}},{{/-last}}{{/allParams}});
        }
        {{/isArray}}
        {{^isArray}}
        @Override
        public ResponseEntity<{{{returnType}}}> {{operationId}}({{#allParams}}{{^isFile}}{{^isBodyParam}}{{>optionalDataType}}{{/isBodyParam}}{{#isBodyParam}}{{^reactive}}{{>optionalDataType}}{{/reactive}}{{#reactive}}{{^isArray}}Mono<{{{dataType}}}>{{/isArray}}{{#isArray}}Flux<{{{baseType}}}>{{/isArray}}{{/reactive}}{{/isBodyParam}}{{/isFile}}{{#isFile}}{{#isArray}}List<{{/isArray}}{{#reactive}}Flux<Part>{{/reactive}}{{^reactive}}MultipartFile{{/reactive}}{{#isArray}}>{{/isArray}}{{/isFile}} {{paramName}}{{^-last}},
        {{/-last}}{{/allParams}}{{#reactive}}{{#hasParams}},
        {{/hasParams}}ServerWebExchange exchange{{/reactive}}{{#vendorExtensions.x-spring-paginated}}{{#hasParams}}, {{/hasParams}}{{^hasParams}}{{#reactive}}, {{/reactive}}{{/hasParams}}final Pageable pageable{{/vendorExtensions.x-spring-paginated}}) {
            return service.{{operationId}}({{#allParams}}{{paramName}}{{^-last}},{{/-last}}{{/allParams}});
        }
        {{/isArray}}
    {{/operation}}
{{/operations}}
}